//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Org.Libsdl.App {

	// Metadata.xml XPath class reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']"
	[global::Android.Runtime.Register ("org/libsdl/app/SDLActivity", DoNotGenerateAcw=true)]
	public partial class SDLActivity : global::Android.App.Activity, global::Android.Views.View.IOnSystemUiVisibilityChangeListener {
		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='COMMAND_USER']"
		[Register ("COMMAND_USER")]
		protected const int CommandUser = (int) 32768;


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='mBrokenLibraries']"
		[Register ("mBrokenLibraries")]
		public static bool MBrokenLibraries {
			get {
				const string __id = "mBrokenLibraries.Z";

				var __v = _members.StaticFields.GetBooleanValue (__id);
				return __v;
			}
			set {
				const string __id = "mBrokenLibraries.Z";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='mCurrentLocale']"
		[Register ("mCurrentLocale")]
		protected static global::Java.Util.Locale MCurrentLocale {
			get {
				const string __id = "mCurrentLocale.Ljava/util/Locale;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Java.Util.Locale> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "mCurrentLocale.Ljava/util/Locale;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='mCurrentNativeState']"
		[Register ("mCurrentNativeState")]
		public static global::Org.Libsdl.App.SDLActivity.NativeState MCurrentNativeState {
			get {
				const string __id = "mCurrentNativeState.Lorg/libsdl/app/SDLActivity$NativeState;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity.NativeState> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "mCurrentNativeState.Lorg/libsdl/app/SDLActivity$NativeState;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='mCurrentOrientation']"
		[Register ("mCurrentOrientation")]
		protected static int MCurrentOrientation {
			get {
				const string __id = "mCurrentOrientation.I";

				var __v = _members.StaticFields.GetInt32Value (__id);
				return __v;
			}
			set {
				const string __id = "mCurrentOrientation.I";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='messageboxSelection']"
		[Register ("messageboxSelection")]
		protected IList<int> MessageboxSelection {
			get {
				const string __id = "messageboxSelection.[I";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Android.Runtime.JavaArray<int>.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "messageboxSelection.[I";

				IntPtr native_value = global::Android.Runtime.JavaArray<int>.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='mFullscreenModeActive']"
		[Register ("mFullscreenModeActive")]
		protected static bool MFullscreenModeActive {
			get {
				const string __id = "mFullscreenModeActive.Z";

				var __v = _members.StaticFields.GetBooleanValue (__id);
				return __v;
			}
			set {
				const string __id = "mFullscreenModeActive.Z";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='mHasFocus']"
		[Register ("mHasFocus")]
		public static bool MHasFocus {
			get {
				const string __id = "mHasFocus.Z";

				var __v = _members.StaticFields.GetBooleanValue (__id);
				return __v;
			}
			set {
				const string __id = "mHasFocus.Z";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='mHasMultiWindow']"
		[Register ("mHasMultiWindow")]
		public static bool MHasMultiWindow {
			get {
				const string __id = "mHasMultiWindow.Z";

				var __v = _members.StaticFields.GetBooleanValue (__id);
				return __v;
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='mHIDDeviceManager']"
		[Register ("mHIDDeviceManager")]
		protected static global::Org.Libsdl.App.HIDDeviceManager MHIDDeviceManager {
			get {
				const string __id = "mHIDDeviceManager.Lorg/libsdl/app/HIDDeviceManager;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.HIDDeviceManager> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "mHIDDeviceManager.Lorg/libsdl/app/HIDDeviceManager;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='mIsResumedCalled']"
		[Register ("mIsResumedCalled")]
		public static bool MIsResumedCalled {
			get {
				const string __id = "mIsResumedCalled.Z";

				var __v = _members.StaticFields.GetBooleanValue (__id);
				return __v;
			}
			set {
				const string __id = "mIsResumedCalled.Z";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='mLastCursorID']"
		[Register ("mLastCursorID")]
		protected static int MLastCursorID {
			get {
				const string __id = "mLastCursorID.I";

				var __v = _members.StaticFields.GetInt32Value (__id);
				return __v;
			}
			set {
				const string __id = "mLastCursorID.I";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='mLayout']"
		[Register ("mLayout")]
		protected static global::Android.Views.ViewGroup MLayout {
			get {
				const string __id = "mLayout.Landroid/view/ViewGroup;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Android.Views.ViewGroup> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "mLayout.Landroid/view/ViewGroup;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='mNextNativeState']"
		[Register ("mNextNativeState")]
		public static global::Org.Libsdl.App.SDLActivity.NativeState MNextNativeState {
			get {
				const string __id = "mNextNativeState.Lorg/libsdl/app/SDLActivity$NativeState;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity.NativeState> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "mNextNativeState.Lorg/libsdl/app/SDLActivity$NativeState;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='mScreenKeyboardShown']"
		[Register ("mScreenKeyboardShown")]
		protected static bool MScreenKeyboardShown {
			get {
				const string __id = "mScreenKeyboardShown.Z";

				var __v = _members.StaticFields.GetBooleanValue (__id);
				return __v;
			}
			set {
				const string __id = "mScreenKeyboardShown.Z";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='mSDLThread']"
		[Register ("mSDLThread")]
		protected static global::Java.Lang.Thread MSDLThread {
			get {
				const string __id = "mSDLThread.Ljava/lang/Thread;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Java.Lang.Thread> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "mSDLThread.Ljava/lang/Thread;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='mSingleton']"
		[Register ("mSingleton")]
		protected static global::Org.Libsdl.App.SDLActivity MSingleton {
			get {
				const string __id = "mSingleton.Lorg/libsdl/app/SDLActivity;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "mSingleton.Lorg/libsdl/app/SDLActivity;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='mTextEdit']"
		[Register ("mTextEdit")]
		protected static global::Android.Views.View MTextEdit {
			get {
				const string __id = "mTextEdit.Landroid/view/View;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Android.Views.View> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "mTextEdit.Landroid/view/View;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.StaticFields.SetValue (__id, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='SDL_ORIENTATION_LANDSCAPE']"
		[Register ("SDL_ORIENTATION_LANDSCAPE")]
		protected const int SdlOrientationLandscape = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='SDL_ORIENTATION_LANDSCAPE_FLIPPED']"
		[Register ("SDL_ORIENTATION_LANDSCAPE_FLIPPED")]
		protected const int SdlOrientationLandscapeFlipped = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='SDL_ORIENTATION_PORTRAIT']"
		[Register ("SDL_ORIENTATION_PORTRAIT")]
		protected const int SdlOrientationPortrait = (int) 3;

		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='SDL_ORIENTATION_PORTRAIT_FLIPPED']"
		[Register ("SDL_ORIENTATION_PORTRAIT_FLIPPED")]
		protected const int SdlOrientationPortraitFlipped = (int) 4;

		// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/field[@name='SDL_ORIENTATION_UNKNOWN']"
		[Register ("SDL_ORIENTATION_UNKNOWN")]
		protected const int SdlOrientationUnknown = (int) 0;

		// Metadata.xml XPath class reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity.NativeState']"
		[global::Android.Runtime.Register ("org/libsdl/app/SDLActivity$NativeState", DoNotGenerateAcw=true)]
		public sealed partial class NativeState : global::Java.Lang.Enum {

			// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity.NativeState']/field[@name='INIT']"
			[Register ("INIT")]
			public static global::Org.Libsdl.App.SDLActivity.NativeState Init {
				get {
					const string __id = "INIT.Lorg/libsdl/app/SDLActivity$NativeState;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity.NativeState> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity.NativeState']/field[@name='PAUSED']"
			[Register ("PAUSED")]
			public static global::Org.Libsdl.App.SDLActivity.NativeState Paused {
				get {
					const string __id = "PAUSED.Lorg/libsdl/app/SDLActivity$NativeState;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity.NativeState> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity.NativeState']/field[@name='RESUMED']"
			[Register ("RESUMED")]
			public static global::Org.Libsdl.App.SDLActivity.NativeState Resumed {
				get {
					const string __id = "RESUMED.Lorg/libsdl/app/SDLActivity$NativeState;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity.NativeState> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("org/libsdl/app/SDLActivity$NativeState", typeof (NativeState));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal NativeState (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity.NativeState']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("valueOf", "(Ljava/lang/String;)Lorg/libsdl/app/SDLActivity$NativeState;", "")]
			public static unsafe global::Org.Libsdl.App.SDLActivity.NativeState ValueOf (string name)
			{
				const string __id = "valueOf.(Ljava/lang/String;)Lorg/libsdl/app/SDLActivity$NativeState;";
				IntPtr native_name = JNIEnv.NewString ((string)name);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_name);
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
					return global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity.NativeState> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_name);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity.NativeState']/method[@name='values' and count(parameter)=0]"
			[Register ("values", "()[Lorg/libsdl/app/SDLActivity$NativeState;", "")]
			public static unsafe global::Org.Libsdl.App.SDLActivity.NativeState[] Values ()
			{
				const string __id = "values.()[Lorg/libsdl/app/SDLActivity$NativeState;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return (global::Org.Libsdl.App.SDLActivity.NativeState[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Org.Libsdl.App.SDLActivity.NativeState));
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity.SDLCommandHandler']"
		[global::Android.Runtime.Register ("org/libsdl/app/SDLActivity$SDLCommandHandler", DoNotGenerateAcw=true)]
		protected internal partial class SDLCommandHandler : global::Android.OS.Handler {
			static readonly JniPeerMembers _members = new XAPeerMembers ("org/libsdl/app/SDLActivity$SDLCommandHandler", typeof (SDLCommandHandler));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected SDLCommandHandler (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity.SDLCommandHandler']/constructor[@name='SDLActivity.SDLCommandHandler' and count(parameter)=0]"
			[Register (".ctor", "()V", "")]
			protected unsafe SDLCommandHandler () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "()V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, null);
				} finally {
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("org/libsdl/app/SDLActivity", typeof (SDLActivity));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected SDLActivity (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/constructor[@name='SDLActivity' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe SDLActivity () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		public static unsafe global::Android.Views.View ContentView {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='getContentView' and count(parameter)=0]"
			[Register ("getContentView", "()Landroid/view/View;", "")]
			get {
				const string __id = "getContentView.()Landroid/view/View;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Android.Views.View> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe global::Android.Content.Context Context {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='getContext' and count(parameter)=0]"
			[Register ("getContext", "()Landroid/content/Context;", "")]
			get {
				const string __id = "getContext.()Landroid/content/Context;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Android.Content.Context> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe int CurrentOrientation {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='getCurrentOrientation' and count(parameter)=0]"
			[Register ("getCurrentOrientation", "()I", "")]
			get {
				const string __id = "getCurrentOrientation.()I";
				try {
					var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe double Diagonal {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='getDiagonal' and count(parameter)=0]"
			[Register ("getDiagonal", "()D", "")]
			get {
				const string __id = "getDiagonal.()D";
				try {
					var __rm = _members.StaticMethods.InvokeDoubleMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe global::Android.Util.DisplayMetrics DisplayDPI {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='getDisplayDPI' and count(parameter)=0]"
			[Register ("getDisplayDPI", "()Landroid/util/DisplayMetrics;", "")]
			get {
				const string __id = "getDisplayDPI.()Landroid/util/DisplayMetrics;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Android.Util.DisplayMetrics> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe bool IsAndroidTV {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='isAndroidTV' and count(parameter)=0]"
			[Register ("isAndroidTV", "()Z", "")]
			get {
				const string __id = "isAndroidTV.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe bool IsChromebook {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='isChromebook' and count(parameter)=0]"
			[Register ("isChromebook", "()Z", "")]
			get {
				const string __id = "isChromebook.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe bool IsDeXMode {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='isDeXMode' and count(parameter)=0]"
			[Register ("isDeXMode", "()Z", "")]
			get {
				const string __id = "isDeXMode.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe bool IsScreenKeyboardShown {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='isScreenKeyboardShown' and count(parameter)=0]"
			[Register ("isScreenKeyboardShown", "()Z", "")]
			get {
				const string __id = "isScreenKeyboardShown.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe bool IsTablet {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='isTablet' and count(parameter)=0]"
			[Register ("isTablet", "()Z", "")]
			get {
				const string __id = "isTablet.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getMainFunction;
#pragma warning disable 0169
		static Delegate GetGetMainFunctionHandler ()
		{
			if (cb_getMainFunction == null)
				cb_getMainFunction = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMainFunction));
			return cb_getMainFunction;
		}

		static IntPtr n_GetMainFunction (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.NewString (__this.MainFunction);
		}
#pragma warning restore 0169

		protected virtual unsafe string MainFunction {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='getMainFunction' and count(parameter)=0]"
			[Register ("getMainFunction", "()Ljava/lang/String;", "GetGetMainFunctionHandler")]
			get {
				const string __id = "getMainFunction.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getMainSharedObject;
#pragma warning disable 0169
		static Delegate GetGetMainSharedObjectHandler ()
		{
			if (cb_getMainSharedObject == null)
				cb_getMainSharedObject = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMainSharedObject));
			return cb_getMainSharedObject;
		}

		static IntPtr n_GetMainSharedObject (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.NewString (__this.MainSharedObject);
		}
#pragma warning restore 0169

		protected virtual unsafe string MainSharedObject {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='getMainSharedObject' and count(parameter)=0]"
			[Register ("getMainSharedObject", "()Ljava/lang/String;", "GetGetMainSharedObjectHandler")]
			get {
				const string __id = "getMainSharedObject.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe bool ManifestEnvironmentVariables {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='getManifestEnvironmentVariables' and count(parameter)=0]"
			[Register ("getManifestEnvironmentVariables", "()Z", "")]
			get {
				const string __id = "getManifestEnvironmentVariables.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe global::Android.Views.Surface NativeSurface {
			// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='getNativeSurface' and count(parameter)=0]"
			[Register ("getNativeSurface", "()Landroid/view/Surface;", "")]
			get {
				const string __id = "getNativeSurface.()Landroid/view/Surface;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Android.Views.Surface> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='clipboardGetText' and count(parameter)=0]"
		[Register ("clipboardGetText", "()Ljava/lang/String;", "")]
		public static unsafe string ClipboardGetText ()
		{
			const string __id = "clipboardGetText.()Ljava/lang/String;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='clipboardHasText' and count(parameter)=0]"
		[Register ("clipboardHasText", "()Z", "")]
		public static unsafe bool ClipboardHasText ()
		{
			const string __id = "clipboardHasText.()Z";
			try {
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='clipboardSetText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("clipboardSetText", "(Ljava/lang/String;)V", "")]
		public static unsafe void ClipboardSetText (string @string)
		{
			const string __id = "clipboardSetText.(Ljava/lang/String;)V";
			IntPtr native__string = JNIEnv.NewString ((string)@string);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native__string);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native__string);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='createCustomCursor' and count(parameter)=5 and parameter[1][@type='int[]'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int']]"
		[Register ("createCustomCursor", "([IIIII)I", "")]
		public static unsafe int CreateCustomCursor (int[] colors, int width, int height, int hotSpotX, int hotSpotY)
		{
			const string __id = "createCustomCursor.([IIIII)I";
			IntPtr native_colors = JNIEnv.NewArray (colors);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (native_colors);
				__args [1] = new JniArgumentValue (width);
				__args [2] = new JniArgumentValue (height);
				__args [3] = new JniArgumentValue (hotSpotX);
				__args [4] = new JniArgumentValue (hotSpotY);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (colors != null) {
					JNIEnv.CopyArray (native_colors, colors);
					JNIEnv.DeleteLocalRef (native_colors);
				}
				global::System.GC.KeepAlive (colors);
			}
		}

		static Delegate cb_createSDLSurface_Landroid_content_Context_;
#pragma warning disable 0169
		static Delegate GetCreateSDLSurface_Landroid_content_Context_Handler ()
		{
			if (cb_createSDLSurface_Landroid_content_Context_ == null)
				cb_createSDLSurface_Landroid_content_Context_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_CreateSDLSurface_Landroid_content_Context_));
			return cb_createSDLSurface_Landroid_content_Context_;
		}

		static IntPtr n_CreateSDLSurface_Landroid_content_Context_ (IntPtr jnienv, IntPtr native__this, IntPtr native_context)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var context = global::Java.Lang.Object.GetObject<global::Android.Content.Context> (native_context, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.CreateSDLSurface (context));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='createSDLSurface' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("createSDLSurface", "(Landroid/content/Context;)Lorg/libsdl/app/SDLSurface;", "GetCreateSDLSurface_Landroid_content_Context_Handler")]
		protected virtual unsafe global::Org.Libsdl.App.SDLSurface CreateSDLSurface (global::Android.Content.Context context)
		{
			const string __id = "createSDLSurface.(Landroid/content/Context;)Lorg/libsdl/app/SDLSurface;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLSurface> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='destroyCustomCursor' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("destroyCustomCursor", "(I)V", "")]
		public static unsafe void DestroyCustomCursor (int cursorID)
		{
			const string __id = "destroyCustomCursor.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (cursorID);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		static Delegate cb_getArguments;
#pragma warning disable 0169
		static Delegate GetGetArgumentsHandler ()
		{
			if (cb_getArguments == null)
				cb_getArguments = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetArguments));
			return cb_getArguments;
		}

		static IntPtr n_GetArguments (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.NewArray (__this.GetArguments ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='getArguments' and count(parameter)=0]"
		[Register ("getArguments", "()[Ljava/lang/String;", "GetGetArgumentsHandler")]
		protected virtual unsafe string[] GetArguments ()
		{
			const string __id = "getArguments.()[Ljava/lang/String;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (string[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (string));
			} finally {
			}
		}

		static Delegate cb_getLibraries;
#pragma warning disable 0169
		static Delegate GetGetLibrariesHandler ()
		{
			if (cb_getLibraries == null)
				cb_getLibraries = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetLibraries));
			return cb_getLibraries;
		}

		static IntPtr n_GetLibraries (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.NewArray (__this.GetLibraries ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='getLibraries' and count(parameter)=0]"
		[Register ("getLibraries", "()[Ljava/lang/String;", "GetGetLibrariesHandler")]
		protected virtual unsafe string[] GetLibraries ()
		{
			const string __id = "getLibraries.()[Ljava/lang/String;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return (string[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (string));
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='handleNativeState' and count(parameter)=0]"
		[Register ("handleNativeState", "()V", "")]
		public static unsafe void HandleNativeState ()
		{
			const string __id = "handleNativeState.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='initTouch' and count(parameter)=0]"
		[Register ("initTouch", "()V", "")]
		public static unsafe void InitTouch ()
		{
			const string __id = "initTouch.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='initialize' and count(parameter)=0]"
		[Register ("initialize", "()V", "")]
		public static unsafe void Initialize ()
		{
			const string __id = "initialize.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='isTextInputEvent' and count(parameter)=1 and parameter[1][@type='android.view.KeyEvent']]"
		[Register ("isTextInputEvent", "(Landroid/view/KeyEvent;)Z", "")]
		public static unsafe bool IsTextInputEvent (global::Android.Views.KeyEvent e)
		{
			const string __id = "isTextInputEvent.(Landroid/view/KeyEvent;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((e == null) ? IntPtr.Zero : ((global::Java.Lang.Object) e).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (e);
			}
		}

		static Delegate cb_loadLibraries;
#pragma warning disable 0169
		static Delegate GetLoadLibrariesHandler ()
		{
			if (cb_loadLibraries == null)
				cb_loadLibraries = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_LoadLibraries));
			return cb_loadLibraries;
		}

		static void n_LoadLibraries (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.LoadLibraries ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='loadLibraries' and count(parameter)=0]"
		[Register ("loadLibraries", "()V", "GetLoadLibrariesHandler")]
		public virtual unsafe void LoadLibraries ()
		{
			const string __id = "loadLibraries.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='manualBackButton' and count(parameter)=0]"
		[Register ("manualBackButton", "()V", "")]
		public static unsafe void ManualBackButton ()
		{
			const string __id = "manualBackButton.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		static Delegate cb_messageboxCreateAndShow_Landroid_os_Bundle_;
#pragma warning disable 0169
		static Delegate GetMessageboxCreateAndShow_Landroid_os_Bundle_Handler ()
		{
			if (cb_messageboxCreateAndShow_Landroid_os_Bundle_ == null)
				cb_messageboxCreateAndShow_Landroid_os_Bundle_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_MessageboxCreateAndShow_Landroid_os_Bundle_));
			return cb_messageboxCreateAndShow_Landroid_os_Bundle_;
		}

		static void n_MessageboxCreateAndShow_Landroid_os_Bundle_ (IntPtr jnienv, IntPtr native__this, IntPtr native_args)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var args = global::Java.Lang.Object.GetObject<global::Android.OS.Bundle> (native_args, JniHandleOwnership.DoNotTransfer);
			__this.MessageboxCreateAndShow (args);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='messageboxCreateAndShow' and count(parameter)=1 and parameter[1][@type='android.os.Bundle']]"
		[Register ("messageboxCreateAndShow", "(Landroid/os/Bundle;)V", "GetMessageboxCreateAndShow_Landroid_os_Bundle_Handler")]
		protected virtual unsafe void MessageboxCreateAndShow (global::Android.OS.Bundle args)
		{
			const string __id = "messageboxCreateAndShow.(Landroid/os/Bundle;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((args == null) ? IntPtr.Zero : ((global::Java.Lang.Object) args).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (args);
			}
		}

		static Delegate cb_messageboxShowMessageBox_ILjava_lang_String_Ljava_lang_String_arrayIarrayIarrayLjava_lang_String_arrayI;
#pragma warning disable 0169
		static Delegate GetMessageboxShowMessageBox_ILjava_lang_String_Ljava_lang_String_arrayIarrayIarrayLjava_lang_String_arrayIHandler ()
		{
			if (cb_messageboxShowMessageBox_ILjava_lang_String_Ljava_lang_String_arrayIarrayIarrayLjava_lang_String_arrayI == null)
				cb_messageboxShowMessageBox_ILjava_lang_String_Ljava_lang_String_arrayIarrayIarrayLjava_lang_String_arrayI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPILLLLLL_I (n_MessageboxShowMessageBox_ILjava_lang_String_Ljava_lang_String_arrayIarrayIarrayLjava_lang_String_arrayI));
			return cb_messageboxShowMessageBox_ILjava_lang_String_Ljava_lang_String_arrayIarrayIarrayLjava_lang_String_arrayI;
		}

		static int n_MessageboxShowMessageBox_ILjava_lang_String_Ljava_lang_String_arrayIarrayIarrayLjava_lang_String_arrayI (IntPtr jnienv, IntPtr native__this, int flags, IntPtr native_title, IntPtr native_message, IntPtr native_buttonFlags, IntPtr native_buttonIds, IntPtr native_buttonTexts, IntPtr native_colors)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var title = JNIEnv.GetString (native_title, JniHandleOwnership.DoNotTransfer);
			var message = JNIEnv.GetString (native_message, JniHandleOwnership.DoNotTransfer);
			var buttonFlags = (int[]) JNIEnv.GetArray (native_buttonFlags, JniHandleOwnership.DoNotTransfer, typeof (int));
			var buttonIds = (int[]) JNIEnv.GetArray (native_buttonIds, JniHandleOwnership.DoNotTransfer, typeof (int));
			var buttonTexts = (string[]) JNIEnv.GetArray (native_buttonTexts, JniHandleOwnership.DoNotTransfer, typeof (string));
			var colors = (int[]) JNIEnv.GetArray (native_colors, JniHandleOwnership.DoNotTransfer, typeof (int));
			int __ret = __this.MessageboxShowMessageBox (flags, title, message, buttonFlags, buttonIds, buttonTexts, colors);
			if (buttonFlags != null)
				JNIEnv.CopyArray (buttonFlags, native_buttonFlags);
			if (buttonIds != null)
				JNIEnv.CopyArray (buttonIds, native_buttonIds);
			if (buttonTexts != null)
				JNIEnv.CopyArray (buttonTexts, native_buttonTexts);
			if (colors != null)
				JNIEnv.CopyArray (colors, native_colors);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='messageboxShowMessageBox' and count(parameter)=7 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='int[]'] and parameter[5][@type='int[]'] and parameter[6][@type='java.lang.String[]'] and parameter[7][@type='int[]']]"
		[Register ("messageboxShowMessageBox", "(ILjava/lang/String;Ljava/lang/String;[I[I[Ljava/lang/String;[I)I", "GetMessageboxShowMessageBox_ILjava_lang_String_Ljava_lang_String_arrayIarrayIarrayLjava_lang_String_arrayIHandler")]
		public virtual unsafe int MessageboxShowMessageBox (int flags, string title, string message, int[] buttonFlags, int[] buttonIds, string[] buttonTexts, int[] colors)
		{
			const string __id = "messageboxShowMessageBox.(ILjava/lang/String;Ljava/lang/String;[I[I[Ljava/lang/String;[I)I";
			IntPtr native_title = JNIEnv.NewString ((string)title);
			IntPtr native_message = JNIEnv.NewString ((string)message);
			IntPtr native_buttonFlags = JNIEnv.NewArray (buttonFlags);
			IntPtr native_buttonIds = JNIEnv.NewArray (buttonIds);
			IntPtr native_buttonTexts = JNIEnv.NewArray (buttonTexts);
			IntPtr native_colors = JNIEnv.NewArray (colors);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue (flags);
				__args [1] = new JniArgumentValue (native_title);
				__args [2] = new JniArgumentValue (native_message);
				__args [3] = new JniArgumentValue (native_buttonFlags);
				__args [4] = new JniArgumentValue (native_buttonIds);
				__args [5] = new JniArgumentValue (native_buttonTexts);
				__args [6] = new JniArgumentValue (native_colors);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_title);
				JNIEnv.DeleteLocalRef (native_message);
				if (buttonFlags != null) {
					JNIEnv.CopyArray (native_buttonFlags, buttonFlags);
					JNIEnv.DeleteLocalRef (native_buttonFlags);
				}
				if (buttonIds != null) {
					JNIEnv.CopyArray (native_buttonIds, buttonIds);
					JNIEnv.DeleteLocalRef (native_buttonIds);
				}
				if (buttonTexts != null) {
					JNIEnv.CopyArray (native_buttonTexts, buttonTexts);
					JNIEnv.DeleteLocalRef (native_buttonTexts);
				}
				if (colors != null) {
					JNIEnv.CopyArray (native_colors, colors);
					JNIEnv.DeleteLocalRef (native_colors);
				}
				global::System.GC.KeepAlive (buttonFlags);
				global::System.GC.KeepAlive (buttonIds);
				global::System.GC.KeepAlive (buttonTexts);
				global::System.GC.KeepAlive (colors);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='minimizeWindow' and count(parameter)=0]"
		[Register ("minimizeWindow", "()V", "")]
		public static unsafe void MinimizeWindow ()
		{
			const string __id = "minimizeWindow.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='nativeAddTouch' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String']]"
		[Register ("nativeAddTouch", "(ILjava/lang/String;)V", "")]
		public static unsafe void NativeAddTouch (int p0, string p1)
		{
			const string __id = "nativeAddTouch.(ILjava/lang/String;)V";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='nativeFocusChanged' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("nativeFocusChanged", "(Z)V", "")]
		public static unsafe void NativeFocusChanged (bool p0)
		{
			const string __id = "nativeFocusChanged.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='nativeGetHint' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("nativeGetHint", "(Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string NativeGetHint (string p0)
		{
			const string __id = "nativeGetHint.(Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='nativeGetHintBoolean' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]"
		[Register ("nativeGetHintBoolean", "(Ljava/lang/String;Z)Z", "")]
		public static unsafe bool NativeGetHintBoolean (string p0, bool p1)
		{
			const string __id = "nativeGetHintBoolean.(Ljava/lang/String;Z)Z";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='nativeLowMemory' and count(parameter)=0]"
		[Register ("nativeLowMemory", "()V", "")]
		public static unsafe void NativeLowMemory ()
		{
			const string __id = "nativeLowMemory.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='nativePause' and count(parameter)=0]"
		[Register ("nativePause", "()V", "")]
		public static unsafe void NativePause ()
		{
			const string __id = "nativePause.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='nativePermissionResult' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='boolean']]"
		[Register ("nativePermissionResult", "(IZ)V", "")]
		public static unsafe void NativePermissionResult (int p0, bool p1)
		{
			const string __id = "nativePermissionResult.(IZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='nativeQuit' and count(parameter)=0]"
		[Register ("nativeQuit", "()V", "")]
		public static unsafe void NativeQuit ()
		{
			const string __id = "nativeQuit.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='nativeResume' and count(parameter)=0]"
		[Register ("nativeResume", "()V", "")]
		public static unsafe void NativeResume ()
		{
			const string __id = "nativeResume.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='nativeRunMain' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.Object']]"
		[Register ("nativeRunMain", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)I", "")]
		public static unsafe int NativeRunMain (string p0, string p1, global::Java.Lang.Object p2)
		{
			const string __id = "nativeRunMain.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)I";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue ((p2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p2).Handle);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='nativeSendQuit' and count(parameter)=0]"
		[Register ("nativeSendQuit", "()V", "")]
		public static unsafe void NativeSendQuit ()
		{
			const string __id = "nativeSendQuit.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='nativeSetScreenResolution' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='float']]"
		[Register ("nativeSetScreenResolution", "(IIIIF)V", "")]
		public static unsafe void NativeSetScreenResolution (int p0, int p1, int p2, int p3, float p4)
		{
			const string __id = "nativeSetScreenResolution.(IIIIF)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='nativeSetenv' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("nativeSetenv", "(Ljava/lang/String;Ljava/lang/String;)V", "")]
		public static unsafe void NativeSetenv (string p0, string p1)
		{
			const string __id = "nativeSetenv.(Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='nativeSetupJNI' and count(parameter)=0]"
		[Register ("nativeSetupJNI", "()I", "")]
		public static unsafe int NativeSetupJNI ()
		{
			const string __id = "nativeSetupJNI.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onNativeAccel' and count(parameter)=3 and parameter[1][@type='float'] and parameter[2][@type='float'] and parameter[3][@type='float']]"
		[Register ("onNativeAccel", "(FFF)V", "")]
		public static unsafe void OnNativeAccel (float p0, float p1, float p2)
		{
			const string __id = "onNativeAccel.(FFF)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onNativeClipboardChanged' and count(parameter)=0]"
		[Register ("onNativeClipboardChanged", "()V", "")]
		public static unsafe void OnNativeClipboardChanged ()
		{
			const string __id = "onNativeClipboardChanged.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onNativeDropFile' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("onNativeDropFile", "(Ljava/lang/String;)V", "")]
		public static unsafe void OnNativeDropFile (string p0)
		{
			const string __id = "onNativeDropFile.(Ljava/lang/String;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onNativeKeyDown' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("onNativeKeyDown", "(I)V", "")]
		public static unsafe void OnNativeKeyDown (int p0)
		{
			const string __id = "onNativeKeyDown.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onNativeKeyUp' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("onNativeKeyUp", "(I)V", "")]
		public static unsafe void OnNativeKeyUp (int p0)
		{
			const string __id = "onNativeKeyUp.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onNativeKeyboardFocusLost' and count(parameter)=0]"
		[Register ("onNativeKeyboardFocusLost", "()V", "")]
		public static unsafe void OnNativeKeyboardFocusLost ()
		{
			const string __id = "onNativeKeyboardFocusLost.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onNativeLocaleChanged' and count(parameter)=0]"
		[Register ("onNativeLocaleChanged", "()V", "")]
		public static unsafe void OnNativeLocaleChanged ()
		{
			const string __id = "onNativeLocaleChanged.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onNativeMouse' and count(parameter)=5 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='float'] and parameter[4][@type='float'] and parameter[5][@type='boolean']]"
		[Register ("onNativeMouse", "(IIFFZ)V", "")]
		public static unsafe void OnNativeMouse (int p0, int p1, float p2, float p3, bool p4)
		{
			const string __id = "onNativeMouse.(IIFFZ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onNativeOrientationChanged' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("onNativeOrientationChanged", "(I)V", "")]
		public static unsafe void OnNativeOrientationChanged (int p0)
		{
			const string __id = "onNativeOrientationChanged.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onNativeResize' and count(parameter)=0]"
		[Register ("onNativeResize", "()V", "")]
		public static unsafe void OnNativeResize ()
		{
			const string __id = "onNativeResize.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onNativeSoftReturnKey' and count(parameter)=0]"
		[Register ("onNativeSoftReturnKey", "()Z", "")]
		public static unsafe bool OnNativeSoftReturnKey ()
		{
			const string __id = "onNativeSoftReturnKey.()Z";
			try {
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onNativeSurfaceChanged' and count(parameter)=0]"
		[Register ("onNativeSurfaceChanged", "()V", "")]
		public static unsafe void OnNativeSurfaceChanged ()
		{
			const string __id = "onNativeSurfaceChanged.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onNativeSurfaceCreated' and count(parameter)=0]"
		[Register ("onNativeSurfaceCreated", "()V", "")]
		public static unsafe void OnNativeSurfaceCreated ()
		{
			const string __id = "onNativeSurfaceCreated.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onNativeSurfaceDestroyed' and count(parameter)=0]"
		[Register ("onNativeSurfaceDestroyed", "()V", "")]
		public static unsafe void OnNativeSurfaceDestroyed ()
		{
			const string __id = "onNativeSurfaceDestroyed.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onNativeTouch' and count(parameter)=6 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='float'] and parameter[5][@type='float'] and parameter[6][@type='float']]"
		[Register ("onNativeTouch", "(IIIFFF)V", "")]
		public static unsafe void OnNativeTouch (int p0, int p1, int p2, float p3, float p4, float p5)
		{
			const string __id = "onNativeTouch.(IIIFFF)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [6];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue (p3);
				__args [4] = new JniArgumentValue (p4);
				__args [5] = new JniArgumentValue (p5);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		static Delegate cb_onRequestPermissionsResult_IarrayLjava_lang_String_arrayI;
#pragma warning disable 0169
		static Delegate GetOnRequestPermissionsResult_IarrayLjava_lang_String_arrayIHandler ()
		{
			if (cb_onRequestPermissionsResult_IarrayLjava_lang_String_arrayI == null)
				cb_onRequestPermissionsResult_IarrayLjava_lang_String_arrayI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPILL_V (n_OnRequestPermissionsResult_IarrayLjava_lang_String_arrayI));
			return cb_onRequestPermissionsResult_IarrayLjava_lang_String_arrayI;
		}

		static void n_OnRequestPermissionsResult_IarrayLjava_lang_String_arrayI (IntPtr jnienv, IntPtr native__this, int requestCode, IntPtr native_permissions, IntPtr native_grantResults)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var permissions = (string[]) JNIEnv.GetArray (native_permissions, JniHandleOwnership.DoNotTransfer, typeof (string));
			var grantResults = (int[]) JNIEnv.GetArray (native_grantResults, JniHandleOwnership.DoNotTransfer, typeof (int));
			__this.OnRequestPermissionsResult (requestCode, permissions, grantResults);
			if (permissions != null)
				JNIEnv.CopyArray (permissions, native_permissions);
			if (grantResults != null)
				JNIEnv.CopyArray (grantResults, native_grantResults);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onRequestPermissionsResult' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String[]'] and parameter[3][@type='int[]']]"
		[Register ("onRequestPermissionsResult", "(I[Ljava/lang/String;[I)V", "GetOnRequestPermissionsResult_IarrayLjava_lang_String_arrayIHandler")]
		public virtual unsafe void OnRequestPermissionsResult (int requestCode, string[] permissions, int[] grantResults)
		{
			const string __id = "onRequestPermissionsResult.(I[Ljava/lang/String;[I)V";
			IntPtr native_permissions = JNIEnv.NewArray (permissions);
			IntPtr native_grantResults = JNIEnv.NewArray (grantResults);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (requestCode);
				__args [1] = new JniArgumentValue (native_permissions);
				__args [2] = new JniArgumentValue (native_grantResults);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				if (permissions != null) {
					JNIEnv.CopyArray (native_permissions, permissions);
					JNIEnv.DeleteLocalRef (native_permissions);
				}
				if (grantResults != null) {
					JNIEnv.CopyArray (native_grantResults, grantResults);
					JNIEnv.DeleteLocalRef (native_grantResults);
				}
				global::System.GC.KeepAlive (permissions);
				global::System.GC.KeepAlive (grantResults);
			}
		}

		static Delegate cb_onSystemUiVisibilityChange_I;
#pragma warning disable 0169
		static Delegate GetOnSystemUiVisibilityChange_IHandler ()
		{
			if (cb_onSystemUiVisibilityChange_I == null)
				cb_onSystemUiVisibilityChange_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_OnSystemUiVisibilityChange_I));
			return cb_onSystemUiVisibilityChange_I;
		}

		static void n_OnSystemUiVisibilityChange_I (IntPtr jnienv, IntPtr native__this, int native_visibility)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var visibility = (global::Android.Views.StatusBarVisibility) native_visibility;
			__this.OnSystemUiVisibilityChange (visibility);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onSystemUiVisibilityChange' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("onSystemUiVisibilityChange", "(I)V", "GetOnSystemUiVisibilityChange_IHandler")]
		public virtual unsafe void OnSystemUiVisibilityChange ([global::Android.Runtime.GeneratedEnum] global::Android.Views.StatusBarVisibility visibility)
		{
			const string __id = "onSystemUiVisibilityChange.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((int) visibility);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_onUnhandledMessage_ILjava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetOnUnhandledMessage_ILjava_lang_Object_Handler ()
		{
			if (cb_onUnhandledMessage_ILjava_lang_Object_ == null)
				cb_onUnhandledMessage_ILjava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIL_Z (n_OnUnhandledMessage_ILjava_lang_Object_));
			return cb_onUnhandledMessage_ILjava_lang_Object_;
		}

		static bool n_OnUnhandledMessage_ILjava_lang_Object_ (IntPtr jnienv, IntPtr native__this, int command, IntPtr native_param)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var param = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_param, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.OnUnhandledMessage (command, param);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='onUnhandledMessage' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='java.lang.Object']]"
		[Register ("onUnhandledMessage", "(ILjava/lang/Object;)Z", "GetOnUnhandledMessage_ILjava_lang_Object_Handler")]
		protected virtual unsafe bool OnUnhandledMessage (int command, global::Java.Lang.Object param)
		{
			const string __id = "onUnhandledMessage.(ILjava/lang/Object;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (command);
				__args [1] = new JniArgumentValue ((param == null) ? IntPtr.Zero : ((global::Java.Lang.Object) param).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (param);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='openURL' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("openURL", "(Ljava/lang/String;)I", "")]
		public static unsafe int OpenURL (string url)
		{
			const string __id = "openURL.(Ljava/lang/String;)I";
			IntPtr native_url = JNIEnv.NewString ((string)url);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_url);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_url);
			}
		}

		static Delegate cb_pauseNativeThread;
#pragma warning disable 0169
		static Delegate GetPauseNativeThreadHandler ()
		{
			if (cb_pauseNativeThread == null)
				cb_pauseNativeThread = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_PauseNativeThread));
			return cb_pauseNativeThread;
		}

		static void n_PauseNativeThread (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.PauseNativeThread ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='pauseNativeThread' and count(parameter)=0]"
		[Register ("pauseNativeThread", "()V", "GetPauseNativeThreadHandler")]
		protected virtual unsafe void PauseNativeThread ()
		{
			const string __id = "pauseNativeThread.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_pressBackButton;
#pragma warning disable 0169
		static Delegate GetPressBackButtonHandler ()
		{
			if (cb_pressBackButton == null)
				cb_pressBackButton = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_PressBackButton));
			return cb_pressBackButton;
		}

		static void n_PressBackButton (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.PressBackButton ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='pressBackButton' and count(parameter)=0]"
		[Register ("pressBackButton", "()V", "GetPressBackButtonHandler")]
		public virtual unsafe void PressBackButton ()
		{
			const string __id = "pressBackButton.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='requestPermission' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("requestPermission", "(Ljava/lang/String;I)V", "")]
		public static unsafe void RequestPermission (string permission, int requestCode)
		{
			const string __id = "requestPermission.(Ljava/lang/String;I)V";
			IntPtr native_permission = JNIEnv.NewString ((string)permission);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_permission);
				__args [1] = new JniArgumentValue (requestCode);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_permission);
			}
		}

		static Delegate cb_resumeNativeThread;
#pragma warning disable 0169
		static Delegate GetResumeNativeThreadHandler ()
		{
			if (cb_resumeNativeThread == null)
				cb_resumeNativeThread = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_ResumeNativeThread));
			return cb_resumeNativeThread;
		}

		static void n_ResumeNativeThread (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ResumeNativeThread ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='resumeNativeThread' and count(parameter)=0]"
		[Register ("resumeNativeThread", "()V", "GetResumeNativeThreadHandler")]
		protected virtual unsafe void ResumeNativeThread ()
		{
			const string __id = "resumeNativeThread.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='sendMessage' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("sendMessage", "(II)Z", "")]
		public static unsafe bool SendMessage (int command, int param)
		{
			const string __id = "sendMessage.(II)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (command);
				__args [1] = new JniArgumentValue (param);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='setActivityTitle' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setActivityTitle", "(Ljava/lang/String;)Z", "")]
		public static unsafe bool SetActivityTitle (string title)
		{
			const string __id = "setActivityTitle.(Ljava/lang/String;)Z";
			IntPtr native_title = JNIEnv.NewString ((string)title);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_title);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_title);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='setCustomCursor' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setCustomCursor", "(I)Z", "")]
		public static unsafe bool SetCustomCursor (int cursorID)
		{
			const string __id = "setCustomCursor.(I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (cursorID);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='setOrientation' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='boolean'] and parameter[4][@type='java.lang.String']]"
		[Register ("setOrientation", "(IIZLjava/lang/String;)V", "")]
		public static unsafe void SetOrientation (int w, int h, bool resizable, string hint)
		{
			const string __id = "setOrientation.(IIZLjava/lang/String;)V";
			IntPtr native_hint = JNIEnv.NewString ((string)hint);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (w);
				__args [1] = new JniArgumentValue (h);
				__args [2] = new JniArgumentValue (resizable);
				__args [3] = new JniArgumentValue (native_hint);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_hint);
			}
		}

		static Delegate cb_setOrientationBis_IIZLjava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetOrientationBis_IIZLjava_lang_String_Handler ()
		{
			if (cb_setOrientationBis_IIZLjava_lang_String_ == null)
				cb_setOrientationBis_IIZLjava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPIIZL_V (n_SetOrientationBis_IIZLjava_lang_String_));
			return cb_setOrientationBis_IIZLjava_lang_String_;
		}

		static void n_SetOrientationBis_IIZLjava_lang_String_ (IntPtr jnienv, IntPtr native__this, int w, int h, bool resizable, IntPtr native_hint)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var hint = JNIEnv.GetString (native_hint, JniHandleOwnership.DoNotTransfer);
			__this.SetOrientationBis (w, h, resizable, hint);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='setOrientationBis' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='boolean'] and parameter[4][@type='java.lang.String']]"
		[Register ("setOrientationBis", "(IIZLjava/lang/String;)V", "GetSetOrientationBis_IIZLjava_lang_String_Handler")]
		public virtual unsafe void SetOrientationBis (int w, int h, bool resizable, string hint)
		{
			const string __id = "setOrientationBis.(IIZLjava/lang/String;)V";
			IntPtr native_hint = JNIEnv.NewString ((string)hint);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (w);
				__args [1] = new JniArgumentValue (h);
				__args [2] = new JniArgumentValue (resizable);
				__args [3] = new JniArgumentValue (native_hint);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_hint);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='setRelativeMouseEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("setRelativeMouseEnabled", "(Z)Z", "")]
		public static unsafe bool SetRelativeMouseEnabled (bool enabled)
		{
			const string __id = "setRelativeMouseEnabled.(Z)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (enabled);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='setSystemCursor' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setSystemCursor", "(I)Z", "")]
		public static unsafe bool SetSystemCursor (int cursorID)
		{
			const string __id = "setSystemCursor.(I)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (cursorID);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='setWindowStyle' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("setWindowStyle", "(Z)V", "")]
		public static unsafe void SetWindowStyle (bool fullscreen)
		{
			const string __id = "setWindowStyle.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (fullscreen);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='shouldMinimizeOnFocusLoss' and count(parameter)=0]"
		[Register ("shouldMinimizeOnFocusLoss", "()Z", "")]
		public static unsafe bool ShouldMinimizeOnFocusLoss ()
		{
			const string __id = "shouldMinimizeOnFocusLoss.()Z";
			try {
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='showTextInput' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
		[Register ("showTextInput", "(IIII)Z", "")]
		public static unsafe bool ShowTextInput (int x, int y, int w, int h)
		{
			const string __id = "showTextInput.(IIII)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (x);
				__args [1] = new JniArgumentValue (y);
				__args [2] = new JniArgumentValue (w);
				__args [3] = new JniArgumentValue (h);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='showToast' and count(parameter)=5 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='int']]"
		[Register ("showToast", "(Ljava/lang/String;IIII)I", "")]
		public static unsafe int ShowToast (string message, int duration, int gravity, int xOffset, int yOffset)
		{
			const string __id = "showToast.(Ljava/lang/String;IIII)I";
			IntPtr native_message = JNIEnv.NewString ((string)message);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (native_message);
				__args [1] = new JniArgumentValue (duration);
				__args [2] = new JniArgumentValue (gravity);
				__args [3] = new JniArgumentValue (xOffset);
				__args [4] = new JniArgumentValue (yOffset);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_message);
			}
		}

		static Delegate cb_superOnBackPressed;
#pragma warning disable 0169
		static Delegate GetSuperOnBackPressedHandler ()
		{
			if (cb_superOnBackPressed == null)
				cb_superOnBackPressed = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_SuperOnBackPressed));
			return cb_superOnBackPressed;
		}

		static void n_SuperOnBackPressed (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Org.Libsdl.App.SDLActivity> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SuperOnBackPressed ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='superOnBackPressed' and count(parameter)=0]"
		[Register ("superOnBackPressed", "()V", "GetSuperOnBackPressedHandler")]
		public virtual unsafe void SuperOnBackPressed ()
		{
			const string __id = "superOnBackPressed.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='org.libsdl.app']/class[@name='SDLActivity']/method[@name='supportsRelativeMouse' and count(parameter)=0]"
		[Register ("supportsRelativeMouse", "()Z", "")]
		public static unsafe bool SupportsRelativeMouse ()
		{
			const string __id = "supportsRelativeMouse.()Z";
			try {
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
				return __rm;
			} finally {
			}
		}

	}
}
